#!/bin/bash

function print_help_and_exit
{
cat >&2 << 'EOF'

'ftdmp-all-dock-cadscore-diversify' docks and selects a diverse set of models based on reference-based CAD-scores

Options:
    --job-name                string  *  job name
    --static-file             string  *  static input file path
    --static-sel              string     query to restrict static atoms, default is '[]'
    --static-chain            string     chain name or chain renaming rule to apply for static atoms, default is ''
    --mobile-file             string  *  mobile input file path
    --mobile-sel              string     query to restrict mobile atoms, default is '[]'
    --mobile-chain            string     chain name or chain renaming rule to apply for mobile atoms, default is ''
    --subselect-contacts      string     query to subselect inter-chain contacts for scoring, default is '[]'
    --reference               string  *  input structure file to compute CAD-score with
    --openmm-forcefield       string     forcefield name for OpenMM-based operations, default is ''
    --conda-path              string     conda installation path, default is ''
    --conda-env               string     conda environment name, default is ''
    --ftdock-keep             number     ftdock keep parameter, default is 1
    --ftdock-angle-step       number     ftdock angle step parameter, default is 9
    --min-grid-sep            number     minimum grid separation between same-rotation translations, default is 20
    --parallel-docking        number     number of processes to run when docking, default is 8
    --parallel-scoring        number     number of processes to run when scoring, default is 8
    --sbatch-docking          string     sbatch parameters to run docking in parallel, default is ''
    --sbatch-scoring          string     sbatch parameters to run scoring in parallel, default is ''
    --remap-cadscore          string     flag to use optimal chains remapping for CAD-score, default is 'false'
    --cadscore-step           number     step size for CAD-score values, default is 0.1
    --site-cadscore-step      number     step size for site-based CAD-score values, default is 0.1
    --build-complexes         number     number of top complexes to build, default is 0
    --output-dir              string  *  output directory path
    --help | -h                          flag to display help message and exit

Examples:

    ftdmp-all-dock-cadscore-diversify --job-name 'j1' --static-file './chainA.pdb' --mobile-file './chainB.pdb' \
      --cadscore-step 0.05 --site-cadscore-step 0.05 --output-dir './results'

EOF
exit 1
}

################################################################################

if [ -z "$1" ]
then
	print_help_and_exit
fi

if [ -z "$FTDMPDIR" ]
then
	export FTDMPDIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
	export PATH="${FTDMPDIR}/core/voronota-js_release:${FTDMPDIR}/core/3D_Dock/progs:${FTDMPDIR}:${PATH}"
fi

JOB_NAME=""
STATIC_STRUCTURE_FILE=""
STATIC_STRUCTURE_SELECTION="[]"
STATIC_STRUCTURE_CHAIN=""
MOBILE_STRUCTURE_FILE=""
MOBILE_STRUCTURE_SELECTION="[]"
MOBILE_STRUCTURE_CHAIN=""
INTERFACE_SUBSELECTION="[]"
REFERENCE_STRUCTURE_FILE_FOR_COMPARISON=""
OPENMM_FORCEFIELD=""
CONDA_PATH=""
CONDA_ENV=""
FTDOCK_KEEP="1"
FTDOCK_ANGLE_STEP="9"
MIN_GRID_SEP="20"
DOCKING_PROCESSORS="8"
SCORING_PROCESSORS="8"
DOCKING_SBATCH=""
SCORING_SBATCH=""
REMAP_CADSCORE="false"
CADSCORE_STEP="0.1"
SITE_CADSCORE_STEP="0.1"
NUMBER_OF_COMPLEXES_TO_BUILD="0"
OUTPUT_PATH=""
HELP_MODE="false"

while [[ $# > 0 ]]
do
	OPTION="$1"
	OPTARG="$2"
	shift
	case $OPTION in
	--job-name)
		JOB_NAME="$OPTARG"
		shift
		;;
	--static-file)
		STATIC_STRUCTURE_FILE="$OPTARG"
		shift
		;;
	--static-sel)
		STATIC_STRUCTURE_SELECTION="$OPTARG"
		shift
		;;
	--static-chain)
		STATIC_STRUCTURE_CHAIN="$OPTARG"
		shift
		;;
	--mobile-file)
		MOBILE_STRUCTURE_FILE="$OPTARG"
		shift
		;;
	--mobile-sel)
		MOBILE_STRUCTURE_SELECTION="$OPTARG"
		shift
		;;
	--mobile-chain)
		MOBILE_STRUCTURE_CHAIN="$OPTARG"
		shift
		;;
	--subselect-contacts)
		INTERFACE_SUBSELECTION="$OPTARG"
		shift
		;;
	--reference)
		REFERENCE_STRUCTURE_FILE_FOR_COMPARISON="$OPTARG"
		shift
		;;
	--openmm-forcefield)
		OPENMM_FORCEFIELD="$OPTARG"
		shift
		;;
	--conda-path)
		CONDA_PATH="$OPTARG"
		shift
		;;
	--conda-env)
		CONDA_ENV="$OPTARG"
		shift
		;;
	--ftdock-keep)
		FTDOCK_KEEP="$OPTARG"
		shift
		;;
	--ftdock-angle-step)
		FTDOCK_ANGLE_STEP="$OPTARG"
		shift
		;;
	--min-grid-sep)
		MIN_GRID_SEP="$OPTARG"
		shift
		;;
	--parallel-docking)
		DOCKING_PROCESSORS="$OPTARG"
		shift
		;;
	--parallel-scoring)
		SCORING_PROCESSORS="$OPTARG"
		shift
		;;
	--sbatch-docking)
		DOCKING_SBATCH="$OPTARG"
		shift
		;;
	--sbatch-scoring)
		SCORING_SBATCH="$OPTARG"
		shift
		;;
	--remap-cadscore)
		REMAP_CADSCORE="$OPTARG"
		shift
		;;
	--cadscore-step)
		CADSCORE_STEP="$OPTARG"
		shift
		;;
	--site-cadscore-step)
		SITE_CADSCORE_STEP="$OPTARG"
		shift
		;;
	--build-complexes)
		NUMBER_OF_COMPLEXES_TO_BUILD="$OPTARG"
		shift
		;;
	--output-dir)
		OUTPUT_PATH="$OPTARG"
		shift
		;;
	-h|--help)
		HELP_MODE="true"
		;;
	*)
		echo >&2 "Error: invalid command line option '$OPTION'"
		exit 1
		;;
	esac
done

if [ "$HELP_MODE" == "true" ]
then
	print_help_and_exit
fi

[ -n "$JOB_NAME" ] || { echo >&2 "Error: job name not provided"; exit 1;}

[ -n "$STATIC_STRUCTURE_FILE" ] || { echo >&2 "Error: static structure file not provided"; exit 1;}
[ -s "$STATIC_STRUCTURE_FILE" ] || { echo >&2 "Error: static structure file non-existing or empty"; exit 1;}

[ -n "$STATIC_STRUCTURE_SELECTION" ] || { echo >&2 "Error: static structure selection not defined"; exit 1; }

[ -n "$MOBILE_STRUCTURE_FILE" ] || { echo >&2 "Error: mobile structure file not provided"; exit 1;}
[ -s "$MOBILE_STRUCTURE_FILE" ] || { echo >&2 "Error: mobile structure file non-existing or empty"; exit 1;}

[ -n "$MOBILE_STRUCTURE_SELECTION" ] || { echo >&2 "Error: mobile structure selection not defined"; exit 1; }

[ -n "$INTERFACE_SUBSELECTION" ] || { echo >&2 "Error: contacts subselection not defined"; exit 1; }

[ -n "$REFERENCE_STRUCTURE_FILE_FOR_COMPARISON" ] || { echo >&2 "Error: reference structure file not provided"; exit 1;}
[ -s "$REFERENCE_STRUCTURE_FILE_FOR_COMPARISON" ] || { echo >&2 "Error: reference structure file non-existing or empty"; exit 1;}

[ -n "$OUTPUT_PATH" ] || { echo >&2 "Error: output path not provided"; exit 1;}

################################################################################

ftdmp-all-dock \
  --job-name                "$JOB_NAME" \
  --static-file             "$STATIC_STRUCTURE_FILE" \
  --static-sel              "$STATIC_STRUCTURE_SELECTION" \
  --static-chain            "$STATIC_STRUCTURE_CHAIN" \
  --mobile-file             "$MOBILE_STRUCTURE_FILE" \
  --mobile-sel              "$MOBILE_STRUCTURE_SELECTION" \
  --mobile-chain            "$MOBILE_STRUCTURE_CHAIN" \
  --openmm-forcefield       "$OPENMM_FORCEFIELD" \
  --conda-path              "$CONDA_PATH" \
  --conda-env               "$CONDA_ENV" \
  --ftdock-keep             "$FTDOCK_KEEP" \
  --ftdock-angle-step       "$FTDOCK_ANGLE_STEP" \
  --min-grid-sep            "$MIN_GRID_SEP" \
  --parallel                "$DOCKING_PROCESSORS" \
  --sbatch                  "$DOCKING_SBATCH" \
  --output-dir              "$OUTPUT_PATH"

OUTPUT_PATH="${OUTPUT_PATH}/${JOB_NAME}"

PREPARED_STATIC_STRUCTURE_FILE="${OUTPUT_PATH}/monomer_static.pdb"

PREPARED_MOBILE_STRUCTURE_FILE="${OUTPUT_PATH}/monomer_mobile.pdb"

PREV_SCORING_RESULTS_FILE="${OUTPUT_PATH}/docking_results.txt"

if [ ! -s "$PREV_SCORING_RESULTS_FILE" ]
then
	echo >&2 "Error: no docking results"
	exit 1
fi

################################################################################

ftdmp-all-score \
  --input-from-table        "$PREV_SCORING_RESULTS_FILE" \
  --structure-monomer1      "$PREPARED_STATIC_STRUCTURE_FILE" \
  --structure-monomer2      "$PREPARED_MOBILE_STRUCTURE_FILE" \
  --subselect-contacts      "$INTERFACE_SUBSELECTION" \
  --reference               "$REFERENCE_STRUCTURE_FILE_FOR_COMPARISON" \
  --remap-cadscore          "$REMAP_CADSCORE" \
  --parallel                "$SCORING_PROCESSORS" \
  --sbatch                  "$SCORING_SBATCH" \
  --output-names-prefix     "raw_" \
  --output-dir              "$OUTPUT_PATH"

PREV_SCORING_RESULTS_FILE="${OUTPUT_PATH}/raw_scoring_results_FICS.txt"

if [ ! -s "$PREV_SCORING_RESULTS_FILE" ]
then
	echo >&2 "Error: no raw scoring results"
	exit 1
fi

################################################################################

NEXT_SCORING_RESULTS_FILE="${OUTPUT_PATH}/raw_scoring_results_FICS_diverse.txt"

{
cat "$PREV_SCORING_RESULTS_FILE"
echo "$CADSCORE_STEP"
echo "$SITE_CADSCORE_STEP"
} | ftdmp-check-hash --hash-file "${OUTPUT_PATH}/input_hashes/$(basename "$NEXT_SCORING_RESULTS_FILE")" --dependent-file "$NEXT_SCORING_RESULTS_FILE"

if [ ! -s "$NEXT_SCORING_RESULTS_FILE" ]
then
	cat "$PREV_SCORING_RESULTS_FILE" \
	| ftdmp-diversify-table-by-cadscore \
	  --cadscore-column 'raw_FICS_iface_cadscore' \
	  --site-cadscore-column 'raw_FICS_iface_site_based_cadscore' \
	  --cadscore-step "$CADSCORE_STEP" \
	  --site-cadscore-step "$SITE_CADSCORE_STEP" \
	| column -t \
	> "$NEXT_SCORING_RESULTS_FILE"
fi

PREV_SCORING_RESULTS_FILE="$NEXT_SCORING_RESULTS_FILE"

if [ ! -s "$PREV_SCORING_RESULTS_FILE" ]
then
	echo >&2 "Error: failed to diversify docking results"
	exit 1
fi

################################################################################

if [ "$NUMBER_OF_COMPLEXES_TO_BUILD" -gt "0" ]
then
	NEXT_SCORING_RESULTS_FILE="${OUTPUT_PATH}/raw_diverse_built_results.txt"
	
	TOP_COMPLEXES_DIR="${OUTPUT_PATH}/raw_diverse_complexes"
	
	{
	cat "$PREV_SCORING_RESULTS_FILE"
	cat "$PREPARED_STATIC_STRUCTURE_FILE"
	cat "$PREPARED_MOBILE_STRUCTURE_FILE"
	echo "$NUMBER_OF_COMPLEXES_TO_BUILD"
	} | ftdmp-check-hash --hash-file "${OUTPUT_PATH}/input_hashes/$(basename "$NEXT_SCORING_RESULTS_FILE")" --dependent-file "$NEXT_SCORING_RESULTS_FILE"
	
	if [ ! -s "$NEXT_SCORING_RESULTS_FILE" ]
	then
		rm -rf "$TOP_COMPLEXES_DIR"
		
		cat "$PREV_SCORING_RESULTS_FILE" \
		| head -n "$((NUMBER_OF_COMPLEXES_TO_BUILD+1))" \
		| ftdmp-build-complex --monomer1 "$PREPARED_STATIC_STRUCTURE_FILE" --monomer2 "$PREPARED_MOBILE_STRUCTURE_FILE" \
		  --output-prefix "${TOP_COMPLEXES_DIR}/" \
		  --output-suffix ".pdb" \
		> "$NEXT_SCORING_RESULTS_FILE"
	fi
	
	PREV_SCORING_RESULTS_FILE="$NEXT_SCORING_RESULTS_FILE"
fi

################################################################################
