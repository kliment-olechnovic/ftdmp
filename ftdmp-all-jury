#!/bin/bash

function print_help_and_exit
{
cat >&2 << 'EOF'

'ftdmp-all-jury' ranks scored complex structures of proteins or nucleic acids

Options:
    --input-scoring-table     string  *  input scoring table file path
    --structure-prefix        string     input structure file path prefix, default is ''
    --structure-suffix        string     input structure file path suffix, default is ''
    --structure-monomer1      string     static monomer structure input file path, default is ''
    --structure-monomer2      string     mobile monomer structure input file path, default is ''
    --subselect-contacts      string     query to subselect inter-chain contacts for scoring, default is '[]'
    --rank-names              string  *  rank names to use, or name of a standard set of rank names
    --ranks-top               number     number of top complexes to consider for each ranking, default is 100
    --remap-cadscore          string     flag to use optimal chains remapping for CAD-score, default is 'false'
    --jury-slices             string     slice sizes sequence definition for ranks jury scoring, default is '10 50'
    --jury-cluster            number     clustering threshold for ranks jury scoring, default is 0.9
    --jury-max-values         number     number of max values to use for ranks jury scoring, default is 5
    --redundancy-threshold    number     minimal ordered redundancy value to accept, default is 1
    --parallel                number     number of processes to run when scoring, default is 8
    --sbatch                  string     sbatch parameters to run scoring in parallel, default is ''
    --output-names-prefix     string     output names prefix, default is ''
    --help | -h                          flag to display help message and exit

Examples:

    ftdmp-all-jury --input-scoring-table ./scores/scoring_results.txt --structure-prefix './complexes/'
      --rank-names 'FIV_iface_energy_rank  FIV_energy_clash_tour_rank
                    FIV_sr_iface_energy_rank  FIV_sr_energy_clash_tour_rank
                    FIVb_iface_energy_rank  FIVb_energy_clash_tour_rank
                    FIVb_sr_iface_energy_rank  FIVb_sr_energy_clash_tour_rank'

EOF
exit 1
}

################################################################################

function compute_hash_of_input_structures
{
	TABLE_FILE="$1"
	TABLE_INPUT_PREFIX="$2"
	TABLE_INPUT_SUFFIX="$3"
	TABLE_MONOMERFILE1="$4"
	TABLE_MONOMERFILE2="$5"
	
	{
		cat "$TABLE_FILE"
		if [ -n "$TABLE_MONOMERFILE1" ]
		then
			cat "$TABLE_MONOMERFILE1"
			cat "$TABLE_MONOMERFILE2"
		else
			cat "$TABLE_FILE" \
			| awk -v prefix="$TABLE_INPUT_PREFIX" -v suffix="$TABLE_INPUT_SUFFIX" '{if($1!="ID"){print prefix $1 suffix}}' \
			| sort \
			| xargs -L 1000 cat
		fi
	} \
	| sha256sum
}

################################################################################

if [ -z "$1" ]
then
	print_help_and_exit
fi

if [ -z "$FTDMPDIR" ]
then
	export FTDMPDIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
	export PATH="${FTDMPDIR}/core/voronota-js_release:${FTDMPDIR}:${PATH}"
fi

FROM_TABLE=""
INPUT_PREFIX=""
INPUT_SUFFIX=""
MONOMERFILE1=""
MONOMERFILE2=""
SCORENAME_PREFIX=""
INTERFACE_SUBSELECTION="[]"
SCORING_PROCESSORS="8"
SCORING_SBATCH=""
REMAP_CADSCORE="false"
SCORING_RANKS=""
SCORING_TOP_STAGE2="100"
SCORING_RANKS_JURY_SLICES="10 50" 
SCORING_RANKS_JURY_CLUSTER="0.9" 
SCORING_RANKS_JURY_MAX_VALUES="5" 
REDUNDANCY_THRESHOLD="1"
HELP_MODE="false"

while [[ $# > 0 ]]
do
	OPTION="$1"
	OPTARG="$2"
	shift
	case $OPTION in
	--input-scoring-table)
		FROM_TABLE="$OPTARG"
		shift
		;;
	--structure-prefix)
		INPUT_PREFIX="$OPTARG"
		shift
		;;
	--structure-suffix)
		INPUT_SUFFIX="$OPTARG"
		shift
		;;
	--structure-monomer1)
		MONOMERFILE1="$OPTARG"
		shift
		;;
	--structure-monomer2)
		MONOMERFILE2="$OPTARG"
		shift
		;;
	--output-names-prefix)
		SCORENAME_PREFIX="$OPTARG"
		shift
		;;		
	--subselect-contacts)
		INTERFACE_SUBSELECTION="$OPTARG"
		shift
		;;
	--parallel)
		SCORING_PROCESSORS="$OPTARG"
		shift
		;;
	--sbatch)
		SCORING_SBATCH="$OPTARG"
		shift
		;;
	--remap-cadscore)
		REMAP_CADSCORE="$OPTARG"
		shift
		;;
	--rank-names)
		SCORING_RANKS="$OPTARG"
		shift
		;;
	--ranks-top)
		SCORING_TOP_STAGE2="$OPTARG"
		shift
		;;
	--jury-slices)
		SCORING_RANKS_JURY_SLICES="$OPTARG"
		shift
		;;
	--jury-cluster)
		SCORING_RANKS_JURY_CLUSTER="$OPTARG"
		shift
		;;
	--jury-max-values)
		SCORING_RANKS_JURY_MAX_VALUES="$OPTARG"
		shift
		;;
	--redundancy-threshold)
		REDUNDANCY_THRESHOLD="$OPTARG"
		shift
		;;
	-h|--help)
		HELP_MODE="true"
		;;
	*)
		echo >&2 "Error: invalid command line option '$OPTION'"
		exit 1
		;;
	esac
done

if [ "$HELP_MODE" == "true" ]
then
	print_help_and_exit
fi

if [ -z "$FROM_TABLE" ]
then
	echo >&2 "Error: input scoring table file not specified"
	exit 1
fi

if [ ! -s "$FROM_TABLE" ]
then
	echo >&2 "Error: input scoring table file '$FROM_TABLE' does not exist or is empty"
	exit 1
fi

if [ -n "${MONOMERFILE1}${MONOMERFILE2}" ] && [ -n "$INPUT_PREFIX" ]
then
	echo >&2 "Error: monomers specified together with input prefix"
	exit 1
fi

if [ -n "$MONOMERFILE1" ] && [ -z "$MONOMERFILE2" ]
then
	echo >&2 "Error: only static monomer specified"
	exit 1
fi

if [ -z "$MONOMERFILE1" ] && [ -n "$MONOMERFILE2" ]
then
	echo >&2 "Error: only mobile monomer specified"
	exit 1
fi

[ -n "$INTERFACE_SUBSELECTION" ] || { echo >&2 "Error: contacts subselection not defined"; exit 1; }

[ -n "$SCORING_RANKS" ] || { echo >&2 "Error: scoring rank names not provided"; exit 1;}

[ -n "$SCORING_RANKS_JURY_SLICES" ] || { echo >&2 "Error: scoring ranks jury slices not defined"; exit 1;}

################################################################################

OUTPUT_PATH="$(dirname "$FROM_TABLE")"

PREV_SCORING_RESULTS_FILE="$FROM_TABLE"

################################################################################

NEXT_SCORING_RESULTS_FILE="${OUTPUT_PATH}/${SCORENAME_PREFIX}top_scoring_results_raw.txt"

cat "$PREV_SCORING_RESULTS_FILE" \
| ftdmp-filter-table \
  "<=${SCORING_TOP_STAGE2}" $SCORING_RANKS \
| ftdmp-sort-table \
  --columns "-$(echo "$SCORING_RANKS" | sed 's/^\s*\(\S\+\)\s*.*$/\1/')" \
> "$NEXT_SCORING_RESULTS_FILE"

PREV_SCORING_RESULTS_FILE="$NEXT_SCORING_RESULTS_FILE"

################################################################################

SIMILARITY_MATRIX_FILE="${OUTPUT_PATH}/${SCORENAME_PREFIX}similarity_matrix.txt"

{
compute_hash_of_input_structures "$PREV_SCORING_RESULTS_FILE" "$INPUT_PREFIX" "$INPUT_SUFFIX" "$MONOMERFILE1" "$MONOMERFILE2"
echo "$INTERFACE_SUBSELECTION"
echo "$REMAP_CADSCORE"
} | ftdmp-check-hash --hash-file "${OUTPUT_PATH}/input_hashes/$(basename "$SIMILARITY_MATRIX_FILE")" --dependent-file "$SIMILARITY_MATRIX_FILE"

if [ ! -s "$SIMILARITY_MATRIX_FILE" ]
then
	cat "$PREV_SCORING_RESULTS_FILE" \
	| ftdmp-calc-interface-cadscore-matrix \
	  --input-prefix "$INPUT_PREFIX" --input-suffix "$INPUT_SUFFIX" \
	  --monomer1 "$MONOMERFILE1" --monomer2 "$MONOMERFILE2" \
	  --subselect-contacts "$INTERFACE_SUBSELECTION" \
	  --remap-chains "$REMAP_CADSCORE" \
	  --matrix-output "$SIMILARITY_MATRIX_FILE" \
	  --parallel "$SCORING_PROCESSORS" --sbatch-parameters "$SCORING_SBATCH" \
	> /dev/null
fi

################################################################################

NEXT_SCORING_RESULTS_FILE="${OUTPUT_PATH}/${SCORENAME_PREFIX}top_scoring_results_RJS.txt"

cat "$PREV_SCORING_RESULTS_FILE" \
| ftdmp-calc-ranks-jury-scores \
  --similarities "$SIMILARITY_MATRIX_FILE" \
  --rank-columns "$SCORING_RANKS" \
  --top-slices "$SCORING_RANKS_JURY_SLICES" \
  --cluster "$SCORING_RANKS_JURY_CLUSTER" \
  --several-max-values "$SCORING_RANKS_JURY_MAX_VALUES" \
  --colnames-prefix "${SCORENAME_PREFIX}RJS_" \
  --adjoin \
| ftdmp-sort-table \
  --columns "-${SCORENAME_PREFIX}RJS_rank" \
| ftdmp-calc-redundancy-scores \
  --similarities "$SIMILARITY_MATRIX_FILE" \
  --colnames-prefix "${SCORENAME_PREFIX}RDDS_" \
  --adjoin \
| ftdmp-sort-table \
  --columns "-${SCORENAME_PREFIX}RJS_rank" \
| column -t \
> "$NEXT_SCORING_RESULTS_FILE"

PREV_SCORING_RESULTS_FILE="$NEXT_SCORING_RESULTS_FILE"

################################################################################

NEXT_SCORING_RESULTS_FILE="${OUTPUT_PATH}/${SCORENAME_PREFIX}top_scoring_results_RJS_nonredundant.txt"

cat "$PREV_SCORING_RESULTS_FILE" \
| ftdmp-filter-table \
  "<=${REDUNDANCY_THRESHOLD}" "${SCORENAME_PREFIX}RDDS_ordered_score" \
| ftdmp-sort-table \
  --columns "-${SCORENAME_PREFIX}RJS_rank" \
| column -t \
> "$NEXT_SCORING_RESULTS_FILE"

PREV_SCORING_RESULTS_FILE="$NEXT_SCORING_RESULTS_FILE"

################################################################################
